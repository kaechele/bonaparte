[project]
name = "bonaparte"
version = "1.0.1"
description = "Library to control Napoleon eFIRE enabled fireplaces"
authors = [{ name = "Felix Kaechele", email = "felix@kaechele.ca" }]
requires-python = ">=3.13,<3.14"
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "bleak>=1.0.0",
    "bleak-retry-connector>=4.0.0",
]

[project.urls]
Repository = "https://github.com/kaechele/bonaparte"
Documentation = "https://bonaparte.readthedocs.io"
"Bug Tracker" = "https://github.com/kaechele/bonaparte/issues"
Changelog = "https://github.com/kaechele/bonaparte/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pylint>=3.3.8",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "python-semantic-release>=10.3.1",
]
docs = [
    "blockdiag",
    "furo>=2025.7.19",
    "myst-parser>=4.0.1",
    "sphinx>=8.2.3",
    "sphinxcontrib-nwdiag>=2.0.0",
]

[tool.uv]
default-groups = [
    "dev",
    "docs",
]

[tool.uv.sources]
blockdiag = { git = "https://github.com/yuzutech/blockdiag.git", tag = "v3.3.0" }

[build-system]
requires = ["uv_build>=0.8.11,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "bonaparte"

[tool.semantic_release]
logging_use_named_masks = true
branch = "main"
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "src/bonaparte/__init__.py:__version__",
    "docs/conf.py:release",
]
build_command = "pip install uv && uv build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=bonaparte --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    'if __name__ == "__main__":',
]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = ['docs/.*', 'setup.py']

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[tool.pylint.MAIN]
py-version = "3.13"
ignore = ["tests"]
load-plugins = ["pylint.extensions.code_style", "pylint.extensions.typing"]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "format",
    "not-context-manager",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "too-many-boolean-expressions",
    "unused-argument",
    "wrong-import-order",
]
enable = ["useless-suppression", "use-symbolic-message-instead"]

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.ruff]
target-version = "py313"
exclude = ["docs", "setup.py"]

# Same as Black.
line-length = 88

[tool.ruff.lint]
# Let's tone this down once we release the first version
select = ["ALL"]
ignore = ["COM", "D203", "D213", "I001", "ISC001"]
unfixable = ["ERA"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
voluptuous = "vol"
"homeassistant.helpers.area_registry" = "ar"
"homeassistant.helpers.config_validation" = "cv"
"homeassistant.helpers.device_registry" = "dr"
"homeassistant.helpers.entity_registry" = "er"
"homeassistant.helpers.issue_registry" = "ir"
"homeassistant.util.dt" = "dt_util"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"async_timeout".msg = "use asyncio.timeout instead"
"pytz".msg = "use zoneinfo instead"

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 25
